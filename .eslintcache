[{"C:\\Users\\ratmi\\Desktop\\projects\\avito-task-react-juniour\\src\\index.js":"1","C:\\Users\\ratmi\\Desktop\\projects\\avito-task-react-juniour\\src\\App.js":"2","C:\\Users\\ratmi\\desktop\\projects\\avito-task-react-juniour\\src\\index.js":"3","C:\\Users\\ratmi\\desktop\\projects\\avito-task-react-juniour\\src\\App.js":"4"},{"size":177,"mtime":1612274981693,"results":"5","hashOfConfig":"6"},{"size":7874,"mtime":1612274949974,"results":"7","hashOfConfig":"6"},{"size":177,"mtime":1612274981693,"results":"8","hashOfConfig":"9"},{"size":7874,"mtime":1612274949974,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1ti42a7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"115xam7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\ratmi\\Desktop\\projects\\avito-task-react-juniour\\src\\index.js",[],["22","23"],"C:\\Users\\ratmi\\Desktop\\projects\\avito-task-react-juniour\\src\\App.js",["24","25","26","27","28"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport style from './App.module.css';\n\n// custom form \nconst AppForm = ({ imageId, ...props }) => {\n\n  const submit = (event) => { // logic for submit form\n    event.preventDefault();\n    const login = event.target[0]; \n    const text = event.target[1];\n\n    if (!(Boolean(login.value && text.value)) || (login.value < 0) || (text.value < 0)) {  // error validation\n      props.setModalWindowData('UNSUCCESS');\n    } else {\n      // if the form is correct then there is a post request\n      axios.post(`https://boiling-refuge-66454.herokuapp.com/images/${imageId}/comments`, {\n        comment: 'text.value',\n        name: 'login.value'\n      }).then(Response => {\n        if (Response.status === 204) {\n          // 204 - OK\n          props.leaveComment(login.value, text.value);\n        }\n      })\n      props.setModalWindowData('SUCCESS');\n    }\n  }\n\n\n  const onBlurChange = (ref, type) => { // custom onBlur for \n    if (ref.target.value.length < 1) {\n      ref.target.placeholder = 'FIELD IS REQUIRED'; \n    } else {\n      ref.target.placeholder = `${type[0].toUpperCase() + type.slice(1).toLowerCase()}`;\n    }\n  }\n\n  return <form className={style.ModalWindowContentLeftBlockForm} onSubmit={(event) => { submit(event) }}> {/* custom form */}\n    <input type='text' className={style.ModalWindowContentLeftBlockFormInput} placeholder = 'Name ' onBlur = { (e) => { onBlurChange(e, 'NAME') } } />\n    <input type='text' className={style.ModalWindowContentLeftBlockFormInput}  placeholder = 'Text' onBlur = { (e) => { onBlurChange(e, 'TEXT') } }/>\n\n    <button className={style.ModalWindowContentLeftBlockFormInputButton}>LEAVE POST</button>\n  </form>\n}\n\nconst ModalWindow = ({ boolean, imageId, closeWindow, ...props }) => {\n\n  const [modalWindowData, setModalWindowData] = useState({\n    imageId: null,\n    imageUrl: null,\n    comments: [],\n    succes: false,\n    type: '' // type - for succesFlow\n  })\n  // hooks \n\n  const SuccessFlowUnsucces = ({ type, ...props }) => { // custom function for success and unsuccess operation\n    return <div className={style.UnsuccesSuccesBlock}>\n      {type == 'SUCCESS' ?\n        // check mark\n        <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\" className={style.SuccesSvg}>\n          <path d=\"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"></path>\n          <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path>\n        </svg>\n        :\n        // cross\n        <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"close-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\" className={style.UnsuccesSvg}>\n          <path d=\"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\"></path>\n          <path d=\"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path>\n        </svg>}\n\n      <p className={style.SuccesUnsuccesBlockText}>{type == 'SUCCESS' ? 'Success' : 'Check lorin or text'}</p>\n    </div>\n  }\n\n  useEffect(() => {\n    axios.get(`https://boiling-refuge-66454.herokuapp.com/images/${imageId}`).then(Response => { // get modal window for current id\n      setModalWindowData(prev => ({\n        ...prev,\n        imageId: Response.data.id,\n        imageUrl: Response.data.url,\n        comments: Response.data.comments\n      }))\n    })\n  }, [])\n\n  const leaveComment = (login, text) => { // logic for leave comment\n\n    const getNowDate = () => { // get a exact time for timestamp \n      const today = new Date();\n      const day = String(today.getDate()).padStart(2, '0');\n      const month = String(today.getMonth() + 1).padStart(2, '0'); // January is 0\n      const year = today.getFullYear();\n      return `${month}.${day}.${year}`;\n    }\n\n    const templateComment = { // template for the comment\n      date: getNowDate(),\n      id: modalWindowData.comments.length,\n      text: text\n    }\n\n    setModalWindowData(prev => ({ // set a comment\n      ...prev,\n      comments: [...prev.comments, templateComment]\n    }))\n  }\n\n\n  return <div className={style.ModalWindow}> {/* main render for modal window */}\n    <div className={style.ModalWindowClose} onClick={() => { closeWindow() }}></div>\n\n    {modalWindowData.succes && <SuccessFlowUnsucces type={modalWindowData.type} />}\n\n    <div className={style.ModalWindowContent}>\n      {/* cross to close a modal window */}\n      <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" fill=\"none\" className={style.CloseWindowIcon} onClick = { () => { closeWindow() } }>\n        <line x1=\"1.35355\" y1=\"0.646447\" x2=\"19.3536\" y2=\"18.6464\" stroke=\"black\" />\n        <line x1=\"0.646447\" y1=\"18.6464\" x2=\"18.6464\" y2=\"0.646446\" stroke=\"black\" />\n      </svg>\n\n\n      <div className={style.ModalWindowContentLeftBlock}>\n        <img src={modalWindowData.imageUrl} />\n\n        <div>\n          <AppForm imageId={modalWindowData.imageId} leaveComment={(id, login) => { leaveComment(id, login) }} setModalWindowData={(type) => { setModalWindowData(prev => ({ ...prev, succes: true, type, })) }} />\n        </div>\n      </div>\n\n      <div className={style.ModalWindowContentRightBlock}>\n        <div className={style.ModalWindowContentRightBlockWrapper}>\n          {modalWindowData.comments.length ? modalWindowData.comments.map((a) => { // if there are comments then post them\n\n            const timestampToDate = (ts) => { // get the current time\n              let date = new Date();\n              date.setTime(ts);\n              return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n            }\n\n            return <div className={style.ModalWindowContentRightBlockItem} key={a.id}>\n              <span className={style.ModalWindowContentRightBlockItem_date}> {!String(a.date).split('').includes('.') ? timestampToDate(a.date) : a.date} </span>\n              <p className={style.ModalWindowContentRightBlockItem_text}>{a.text}</p>\n            </div>\n          }) : 'Комментариев нет'}\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\n\nfunction App() { // main function\n  const [photos, setPhotos] = useState([]);  //get photo\n  const [modalWindow, setModalWindow] = useState({ boolean: false, imageId: null });\n  // hooks\n\n\n  // get photos\n  useEffect(() => {\n    axios.get(`https://boiling-refuge-66454.herokuapp.com/images`).then(Response => {\n      setPhotos(Response.data);\n    })\n  }, [])\n\n  // logic for change state && close open window && using as callback\n  const OpenCloseFlow = (boolean, imageId) => {\n    setModalWindow((prev) => ({\n      ...prev,\n      boolean: boolean,\n      imageId: imageId\n    }))\n  }\n\n  // main render for app\n  return (\n    <div className={style.App}>\n      <header className={style.Header}>\n        TEST APP\n      </header>\n      <main className = {style.Main}>\n        {modalWindow.boolean && <ModalWindow {...modalWindow} closeWindow={() => { OpenCloseFlow(false) }} />}\n\n        {photos.map((a) => {\n          return <div key={a.id}>\n            <img src={a.url} onClick={() => { OpenCloseFlow(true, a.id) }} />\n          </div>\n        })}\n      </main>\n      <footer className = {style.Footer}>© 2018-2019</footer>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ratmi\\desktop\\projects\\avito-task-react-juniour\\src\\index.js",[],["29","30"],"C:\\Users\\ratmi\\desktop\\projects\\avito-task-react-juniour\\src\\App.js",["31","32","33","34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":60,"column":13,"nodeType":"42","messageId":"43","endLine":60,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":73,"column":58,"nodeType":"42","messageId":"43","endLine":73,"endColumn":60},{"ruleId":"44","severity":1,"message":"45","line":86,"column":6,"nodeType":"46","endLine":86,"endColumn":8,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":125,"column":9,"nodeType":"50","endLine":125,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":187,"column":13,"nodeType":"50","endLine":187,"endColumn":78},{"ruleId":"36","replacedBy":"51"},{"ruleId":"38","replacedBy":"52"},{"ruleId":"40","severity":1,"message":"41","line":60,"column":13,"nodeType":"42","messageId":"43","endLine":60,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":73,"column":58,"nodeType":"42","messageId":"43","endLine":73,"endColumn":60},{"ruleId":"44","severity":1,"message":"45","line":86,"column":6,"nodeType":"46","endLine":86,"endColumn":8,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"49","line":125,"column":9,"nodeType":"50","endLine":125,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":187,"column":13,"nodeType":"50","endLine":187,"endColumn":78},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imageId'. Either include it or remove the dependency array.","ArrayExpression",["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["54"],["55"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"58","fix":"60"},"Update the dependencies array to be: [imageId]",{"range":"61","text":"62"},{"range":"63","text":"62"},[4005,4007],"[imageId]",[4005,4007]]